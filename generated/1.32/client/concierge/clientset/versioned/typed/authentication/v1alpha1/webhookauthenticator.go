// Copyright 2020-2024 the Pinniped contributors. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	authenticationv1alpha1 "go.pinniped.dev/generated/1.32/apis/concierge/authentication/v1alpha1"
	scheme "go.pinniped.dev/generated/1.32/client/concierge/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// WebhookAuthenticatorsGetter has a method to return a WebhookAuthenticatorInterface.
// A group's client should implement this interface.
type WebhookAuthenticatorsGetter interface {
	WebhookAuthenticators() WebhookAuthenticatorInterface
}

// WebhookAuthenticatorInterface has methods to work with WebhookAuthenticator resources.
type WebhookAuthenticatorInterface interface {
	Create(ctx context.Context, webhookAuthenticator *authenticationv1alpha1.WebhookAuthenticator, opts v1.CreateOptions) (*authenticationv1alpha1.WebhookAuthenticator, error)
	Update(ctx context.Context, webhookAuthenticator *authenticationv1alpha1.WebhookAuthenticator, opts v1.UpdateOptions) (*authenticationv1alpha1.WebhookAuthenticator, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, webhookAuthenticator *authenticationv1alpha1.WebhookAuthenticator, opts v1.UpdateOptions) (*authenticationv1alpha1.WebhookAuthenticator, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*authenticationv1alpha1.WebhookAuthenticator, error)
	List(ctx context.Context, opts v1.ListOptions) (*authenticationv1alpha1.WebhookAuthenticatorList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *authenticationv1alpha1.WebhookAuthenticator, err error)
	WebhookAuthenticatorExpansion
}

// webhookAuthenticators implements WebhookAuthenticatorInterface
type webhookAuthenticators struct {
	*gentype.ClientWithList[*authenticationv1alpha1.WebhookAuthenticator, *authenticationv1alpha1.WebhookAuthenticatorList]
}

// newWebhookAuthenticators returns a WebhookAuthenticators
func newWebhookAuthenticators(c *AuthenticationV1alpha1Client) *webhookAuthenticators {
	return &webhookAuthenticators{
		gentype.NewClientWithList[*authenticationv1alpha1.WebhookAuthenticator, *authenticationv1alpha1.WebhookAuthenticatorList](
			"webhookauthenticators",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *authenticationv1alpha1.WebhookAuthenticator {
				return &authenticationv1alpha1.WebhookAuthenticator{}
			},
			func() *authenticationv1alpha1.WebhookAuthenticatorList {
				return &authenticationv1alpha1.WebhookAuthenticatorList{}
			},
		),
	}
}
