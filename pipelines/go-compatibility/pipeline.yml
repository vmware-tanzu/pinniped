# Copyright 2020-2024 the Pinniped contributors. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

display:

  background_image: https://upload.wikimedia.org/wikipedia/commons/6/68/Mirounga_leonina.jpg

meta:

  build_pinniped: &build_pinniped
    config:
      platform: linux
      inputs:
        - name: pinniped-source
      run:
        path: bash
        args:
          - "-c"
          - |
            set -exuo pipefail
            go version
            cd pinniped-source/

            # compile all of our code
            go build -o /dev/null ./...

            # compile (but don't actually run) all of our tests
            go test ./... -run=nothing

resources:

  - name: daily
    type: time
    icon: calendar-clock
    source:
      location: America/Los_Angeles
      start: 4:00 AM
      stop: 5:00 AM
      days: [ Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday ]

  - name: pinniped-source
    type: git
    icon: github
    source:
      uri: git@github.com:vmware-tanzu/pinniped.git
      branch: main
      private_key: ((source-repo-deploy-key))

  - name: go-1.22-image
    type: registry-image
    icon: docker
    source:
      repository: docker.io/golang
      tag: "1.22"

jobs:

  - name: go-install-cli
    public: true # all logs are publicly visible
    serial: true
    plan:
      - get: daily
        trigger: true
      - task: go-install
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: docker.io/golang
          run:
            path: bash
            args:
              - "-c"
              - |
                set -exuo pipefail
                go install -v go.pinniped.dev/cmd/pinniped@latest

  # This job attempts to check whether it's possible to depend on our API client submodule.
  # It creates a simple test application with go.mod and main.go files, then attempts to compile it.
  #
  # As of now, this is known to be broken so we've decided to disable this job.
  # - name: go-get-submodule
  #   serial: true
  #   plan:
  #   - get: daily
  #     trigger: true
  #   - task: go-get
  #     config:
  #       platform: linux
  #       image_resource:
  #         type: registry-image
  #         source:
  #           repository: docker.io/golang
  #       run:
  #         path: bash
  #         args:
  #           - "-c"
  #           - |
  #             set -euo pipefail
  #             mkdir /work
  #             cd /work

  #             cat << EOF > go.mod
  #             module testapp

  #             go 1.14

  #             require (
  #               go.pinniped.dev/generated/1.18/apis v0.0.0-00010101000000-000000000000
  #               go.pinniped.dev/generated/1.18/client v0.0.0-20200918195624-2d4d7e588a18
  #             )

  #             replace (
  #                 go.pinniped.dev/generated/1.18/apis v0.0.0-00010101000000-000000000000 => go.pinniped.dev/generated/1.18/apis v0.0.0-20200918195624-2d4d7e588a18
  #             )
  #             EOF

  #             cat << EOF > main.go
  #             package main

  #             import (
  #               _ "go.pinniped.dev/generated/1.18/apis/idp/v1alpha1"
  #               _ "go.pinniped.dev/generated/1.18/client/clientset/versioned"
  #             )

  #             func main() {}
  #             EOF

  #             head -100 go.mod main.go
  #             set -x
  #             go mod download
  #             go build -o testapp main.go

  - name: go-1.22-compatibility
    public: true # all logs are publicly visible
    serial: true
    plan:
      - in_parallel:
          - get: daily
            trigger: true
          - get: pinniped-source
          - get: go-1.22-image
      - task: build
        image: go-1.22-image
        <<: *build_pinniped
