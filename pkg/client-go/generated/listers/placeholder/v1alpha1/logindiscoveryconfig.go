/*
Copyright 2020 VMware, Inc.
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/suzerain-io/placeholder-name/pkg/api/placeholder/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LoginDiscoveryConfigLister helps list LoginDiscoveryConfigs.
// All objects returned here must be treated as read-only.
type LoginDiscoveryConfigLister interface {
	// List lists all LoginDiscoveryConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LoginDiscoveryConfig, err error)
	// LoginDiscoveryConfigs returns an object that can list and get LoginDiscoveryConfigs.
	LoginDiscoveryConfigs(namespace string) LoginDiscoveryConfigNamespaceLister
	LoginDiscoveryConfigListerExpansion
}

// loginDiscoveryConfigLister implements the LoginDiscoveryConfigLister interface.
type loginDiscoveryConfigLister struct {
	indexer cache.Indexer
}

// NewLoginDiscoveryConfigLister returns a new LoginDiscoveryConfigLister.
func NewLoginDiscoveryConfigLister(indexer cache.Indexer) LoginDiscoveryConfigLister {
	return &loginDiscoveryConfigLister{indexer: indexer}
}

// List lists all LoginDiscoveryConfigs in the indexer.
func (s *loginDiscoveryConfigLister) List(selector labels.Selector) (ret []*v1alpha1.LoginDiscoveryConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LoginDiscoveryConfig))
	})
	return ret, err
}

// LoginDiscoveryConfigs returns an object that can list and get LoginDiscoveryConfigs.
func (s *loginDiscoveryConfigLister) LoginDiscoveryConfigs(namespace string) LoginDiscoveryConfigNamespaceLister {
	return loginDiscoveryConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LoginDiscoveryConfigNamespaceLister helps list and get LoginDiscoveryConfigs.
// All objects returned here must be treated as read-only.
type LoginDiscoveryConfigNamespaceLister interface {
	// List lists all LoginDiscoveryConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LoginDiscoveryConfig, err error)
	// Get retrieves the LoginDiscoveryConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LoginDiscoveryConfig, error)
	LoginDiscoveryConfigNamespaceListerExpansion
}

// loginDiscoveryConfigNamespaceLister implements the LoginDiscoveryConfigNamespaceLister
// interface.
type loginDiscoveryConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LoginDiscoveryConfigs in the indexer for a given namespace.
func (s loginDiscoveryConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LoginDiscoveryConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LoginDiscoveryConfig))
	})
	return ret, err
}

// Get retrieves the LoginDiscoveryConfig from the indexer for a given namespace and name.
func (s loginDiscoveryConfigNamespaceLister) Get(name string) (*v1alpha1.LoginDiscoveryConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("logindiscoveryconfig"), name)
	}
	return obj.(*v1alpha1.LoginDiscoveryConfig), nil
}
